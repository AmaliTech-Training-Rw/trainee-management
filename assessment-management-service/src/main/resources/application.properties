spring.application.name=assessment-management-service
server.port=8085

springdoc.api-docs.path=/assessments/v3/api-docs
springdoc.swagger-ui.path=/assessments/swagger-ui.html

openapi.service.title=assessment-management-service doc
openapi.service.version=1.0.0
openapi.service.url=http://localhost:8093
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true


management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
logging.level.org.springdoc=DEBUG

spring.data.mongodb.uri=mongodb+srv://mugishaelvis456:UMUGISHAMWIZA123@cluster0.0ooycod.mongodb.net/assessment-management?retryWrites=true&w=majority
spring.data.mongodb.database=assessment-management

spring.main.allow-circular-references=true
spring.main.allow-bean-definition-overriding=true
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

spring.data.mongodb.socket-timeout=3000 # 3 seconds timeout
spring.data.mongodb.connect-timeout=3000 # 3 seconds timeout

# Cloudinary variables
cloudinary.cloud_name=${CLOUD_NAME}
cloudinary.api_key=${API_KEY}
cloudinary.api_secret=${API_SECRET}


kafka.topic.available.trainees=available-trainees
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=assessments
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
